type Album {
  id: ID!
  name: String
  released: Int
  artists: [Artist]
  bands: [Band]
  tracks: [Track]
  genres: [Genre]
  image: String
}

type Query {
  albums(limit: Int, offset: Int): [Album]
  album(id: ID!): Album
}

input CreateAlbumInput {
  name: String!
  released: Int
  artistsIds: [String]
  bandsIds: [String]
  trackIds: [String]
  genresIds: [String]
  image: String
}

input UpdateAlbumInput {
    id: ID!
    name: String
    released: Int
    artistsIds: [String]
    bandsIds: [String]
    trackIds: [String]
    genresIds: [String]
    image: String
}

type Mutation {
  createAlbum(createAlbumInput: CreateAlbumInput): Album!
  updateAlbum(updateAlbumInput: UpdateAlbumInput): Album!
  deleteAlbum(id: ID!): Delete
}
